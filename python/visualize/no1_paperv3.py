import matplotlib.pyplot as plt
import numpy as np

# 设置相同的颜色

# 假设timestamps是一个包含69个时间步标签的列表
timestamps = np.arange(0, 64)  # 例如，从1到69

title = "Interpolation--DISSIPATION"
file_title = "内插--DISSIPATION"

fig, ax1 = plt.subplots(figsize=(12, 10))

rt = [9.80238e-06, 1.2175428e-05, 1.1922642e-05, 1.2419702e-05, 1.24006365e-05, 1.2117649e-05, 1.2291987e-05, 1.2769579e-05, 9.896767e-06, 1.2532049e-05, 1.2268648e-05, 1.275024e-05, 1.2583061e-05, 1.2392907e-05, 1.2547964e-05, 1.295184e-05, 1.0063453e-05, 1.2714686e-05, 1.2482164e-05, 1.2915644e-05, 1.2643056e-05, 1.2614622e-05, 1.2645687e-05, 1.3043333e-05, 1.0222452e-05, 1.275939e-05, 1.2566958e-05, 1.2995633e-05, 1.27458e-05, 1.2651975e-05, 1.2701481e-05, 1.3169455e-05, 1.0330295e-05, 1.2725856e-05, 1.2599794e-05, 1.3023375e-05, 1.2923165e-05, 1.2800548e-05, 1.2833312e-05, 1.3400461e-05, 1.058757e-05, 1.2822339e-05, 1.2740403e-05, 1.3061406e-05, 1.3022491e-05, 1.2974715e-05, 1.2821556e-05, 1.3429865e-05, 1.0629277e-05, 1.2786603e-05, 1.27068915e-05, 1.29837645e-05, 1.29575055e-05, 1.3142019e-05, 1.2944279e-05, 1.3698067e-05, 1.0767839e-05, 1.3060915e-05, 1.3006926e-05, 1.3190173e-05, 1.31676925e-05, 1.3386516e-05, 1.3422041e-05, 1.4034037e-05]
rt_gdl = [7.719195e-06, 8.550391e-06, 8.137684e-06, 8.485723e-06, 8.335267e-06, 8.818351e-06, 8.524583e-06, 8.557599e-06, 7.786403e-06, 8.675061e-06, 8.280454e-06, 8.560302e-06, 8.449529e-06, 9.029877e-06, 8.594689e-06, 8.792191e-06, 7.916051e-06, 8.7969665e-06, 8.33295e-06, 8.700537e-06, 8.501405e-06, 9.0987905e-06, 8.753955e-06, 8.83757e-06, 7.891969e-06, 8.818142e-06, 8.409529e-06, 8.791452e-06, 8.566494e-06, 9.2623695e-06, 8.835963e-06, 8.870823e-06, 8.123069e-06, 8.861541e-06, 8.634655e-06, 8.91147e-06, 8.734652e-06, 9.459765e-06, 8.932486e-06, 9.083758e-06, 8.6435075e-06, 9.079531e-06, 8.691674e-06, 8.958873e-06, 8.830419e-06, 9.402794e-06, 8.874327e-06, 9.0661915e-06, 8.617496e-06, 9.157121e-06, 8.668768e-06, 8.9013865e-06, 8.763795e-06, 9.354345e-06, 9.007145e-06, 9.191799e-06, 8.596317e-06, 9.306142e-06, 8.897296e-06, 9.207415e-06, 9.221706e-06, 9.5717105e-06, 9.426748e-06, 9.473686e-06]

dm = [0.0025070566, 0.0019121029, 0.0015891966, 0.0014630789, 0.0015038591, 0.0014349961, 0.0014589899, 0.0014822294, 0.0018614556, 0.0016643507, 0.0016748247, 0.0016361383, 0.0016652432, 0.0015627526, 0.0014850518, 0.0014995451, 0.0022344897, 0.0020176608, 0.0019784837, 0.0019818638, 0.001977505, 0.0019013205, 0.0018976127, 0.0018994628, 0.0023638878, 0.0022460534, 0.0022331232, 0.0022367695, 0.0022334422, 0.0022194092, 0.0022111207, 0.0021992016, 0.0021588944, 0.002171304, 0.0022308326, 0.002300303, 0.0022871029, 0.0023073554, 0.002381563, 0.0023500226, 0.002489156, 0.002586228, 0.0027363312, 0.0028117057, 0.0029288756, 0.0030511946, 0.0032675012, 0.00355921, 0.004259511, 0.0041163, 0.0036618619, 0.0031651226, 0.0026015285, 0.002190378, 0.0020065487, 0.0019110097, 0.0022700941, 0.0021240578, 0.0021217624, 0.0021236595, 0.0021613142, 0.0020823684, 0.0020938518, 0.002023124]
dm_gdl = [0.00304156, 0.0023718288, 0.0019347419, 0.0018021772, 0.0018218185, 0.001797468, 0.0018305248, 0.0018495517, 0.0017326839, 0.001649421, 0.0016255847, 0.0015970398, 0.0015943149, 0.0015118301, 0.0014794171, 0.0014814093, 0.0021023804, 0.0020629028, 0.0020005512, 0.0020181416, 0.0019701088, 0.0019316468, 0.001952388, 0.001972376, 0.0030878284, 0.0029836593, 0.0029089372, 0.0028984265, 0.0028489446, 0.0028239856, 0.0028399606, 0.00288435, 0.0036296032, 0.0035985592, 0.0035961468, 0.0035532315, 0.0035816666, 0.0036039078, 0.0036679956, 0.0037533902, 0.0043850983, 0.0043831267, 0.004324511, 0.0042934716, 0.004317807, 0.0044387775, 0.0046061594, 0.0048548356, 0.0058878916, 0.0055421595, 0.0049279416, 0.0040050442, 0.0032130613, 0.0027580305, 0.0026256435, 0.0027233206, 0.0031372136, 0.0031808834, 0.0031335321, 0.003175372, 0.0031243428, 0.0031266252, 0.0031490824, 0.0031096532]

rm = [3.9585317e-05, 4.521926e-05, 4.5688783e-05, 4.3955417e-05, 4.418329e-05, 4.3278906e-05, 4.2777334e-05, 4.286767e-05, 4.128542e-05, 4.6449055e-05, 4.6032572e-05, 4.5060588e-05, 4.5619614e-05, 4.52824e-05, 4.505217e-05, 4.6144683e-05, 4.6224664e-05, 5.3306885e-05, 5.164593e-05, 5.0176932e-05, 5.0569786e-05, 5.0726492e-05, 5.1077976e-05, 5.2246225e-05, 4.9937542e-05, 5.6096895e-05, 5.4668308e-05, 5.517408e-05, 5.6651246e-05, 5.5510885e-05, 5.830192e-05, 5.856462e-05, 6.80876e-05, 7.656123e-05, 7.491538e-05, 7.485247e-05, 7.350734e-05, 7.3781055e-05, 7.388203e-05, 7.2604904e-05, 7.336182e-05, 7.642126e-05, 7.6235905e-05, 7.556428e-05, 7.74386e-05, 7.923192e-05, 7.919962e-05, 7.8453624e-05, 7.972748e-05, 8.436853e-05, 8.122657e-05, 8.33694e-05, 8.31243e-05, 8.3234576e-05, 8.413815e-05, 8.582185e-05, 8.647945e-05, 8.991184e-05, 8.820995e-05, 8.93018e-05, 8.990158e-05, 9.017704e-05, 9.166007e-05, 9.2796814e-05]
rm_gdl = [5.3717285e-05, 5.0090868e-05, 4.6806654e-05, 4.682479e-05, 4.577138e-05, 4.6796973e-05, 4.4737342e-05, 4.711643e-05, 5.4742748e-05, 5.2031468e-05, 5.086878e-05, 5.3746408e-05, 5.321899e-05, 5.3218006e-05, 5.4523127e-05, 5.574103e-05, 6.245971e-05, 5.8346657e-05, 5.9067064e-05, 5.8243786e-05, 5.634274e-05, 5.7068628e-05, 5.8201993e-05, 6.278782e-05, 7.0085836e-05, 6.766437e-05, 6.539081e-05, 6.904622e-05, 6.744203e-05, 6.611961e-05, 6.476129e-05, 6.5185406e-05, 7.790629e-05, 7.810742e-05, 7.606774e-05, 7.616916e-05, 7.576348e-05, 7.4238815e-05, 7.446217e-05, 7.593904e-05, 8.417509e-05, 9.298572e-05, 9.0497306e-05, 8.87923e-05, 8.776247e-05, 8.742968e-05, 8.624338e-05, 8.9225105e-05, 9.3365226e-05, 0.0001004576, 9.760287e-05, 9.820474e-05, 9.8964265e-05, 9.714975e-05, 9.643258e-05, 9.732898e-05, 0.000101924146, 0.000108718705, 0.000106134845, 0.000103997954, 0.00010382369, 0.00010405903, 0.00010273359, 0.00010522785]

# 使用主坐标轴绘制数值较接近的四组数据
ax1.plot(timestamps, rt, label='RT', marker='o', markersize=7)
ax1.plot(timestamps, rt_gdl, label='RT-GDL', marker='s', markersize=7)
ax1.plot(timestamps, rm, label='RM', marker='^', markersize=7)
ax1.plot(timestamps, rm_gdl, label='RM-GDL', marker='d', markersize=7)
ax1.set_ylabel('Value', fontsize=28)

# 获取当前的颜色循环
default_colors = plt.rcParams['axes.prop_cycle'].by_key()['color']
# 打印第5个和第6个颜色
fifth_color = default_colors[4]  # 注意Python是从0开始计数的，所以第5个元素是索引4
sixth_color = default_colors[5]  # 同理，第6个元素是索引5

# 创建次坐标轴
ax2 = ax1.twinx()
ax2.plot(timestamps, dm, label='DM', marker='>', color=fifth_color, markersize=7)
ax2.plot(timestamps, dm_gdl, label='DM-GDL', marker='p', color=sixth_color, markersize=7)
ax2.set_ylabel('Secondary Scale', fontsize=28)

# 设置图例，并调整字体大小
lines, labels = ax1.get_legend_handles_labels()
lines2, labels2 = ax2.get_legend_handles_labels()
ax1.legend(lines + lines2, labels + labels2, loc='best', fontsize=23, markerscale=2)

# 添加标题和轴标签
plt.title(title, fontsize=28)
plt.xlabel('TimeStamp', fontsize=28)

# 设置坐标轴刻度的字体大小
ax1.tick_params(axis='both', which='major', labelsize=25)
ax2.tick_params(axis='both', which='major', labelsize=25)

# 假设这三个列表包含了你的实验数据
# dmd_data = [0.4289794973795614, 0.42800151383718527, 0.4270091504692198, 0.42600861722536154, 0.42498736952083865, 0.42402828439892787, 0.42312203183070557, 0.4222557840166214, 0.42140781080434625, 0.42055647683678593, 0.4197069502128803, 0.41882973299270554, 0.41798590195424123, 0.41716836066350443, 0.4164288891712647, 0.41574588623765985, 0.4151125713497543, 0.4144938736401922, 0.41385694913006077, 0.4132584507783631, 0.41270458715035624, 0.41223713687198255, 0.4118180967562931, 0.41147141486830524, 0.41117765942887635, 0.41095382198049035, 0.41080554982509887, 0.41071918243388333, 0.4107400103677225, 0.41085360245025887, 0.4110953639350801, 0.4113921439214796, 0.41173238792355604, 0.41208185048267304, 0.41243962047070826, 0.4128319102399073, 0.41323030894633367, 0.4136287915110423, 0.4139384699757062, 0.41417998540870066, 0.4143259523698296, 0.4143975026121066, 0.41439563389288897, 0.41433861459919674, 0.41423729950259297, 0.41405653070539133, 0.41381366812625897, 0.41345217492654895, 0.4129816097857732, 0.4123888545906904, 0.4117393088763761, 0.4110364110559775, 0.41024614374952956, 0.409362320492905, 0.4083677459327417, 0.40731223014559426, 0.4061768995448772, 0.40500337203327563, 0.40376072844846217, 0.4024815123884117, 0.4011820912225108, 0.3998589513241101, 0.39849799571554834, 0.39707378860104536, 0.3956537358166351, 0.39422641715759715, 0.3928140502987293, 0.3913868224943103, 0.3899647263856478]
# convlstm_data = [0.9986885860934497, 0.9985615865286143, 0.9982921825574377, 0.9978267936180406, 0.9971535384212746, 0.9965300448288835, 0.9954826917466838, 0.9946255601037546, 0.9986946654932344, 0.9986944509950654, 0.9983914420515447, 0.9980386544477469, 0.9974749993478654, 0.9965955056827162, 0.9958103027961651, 0.9947377327711909, 0.9986877072369309, 0.998595599503193, 0.998386777159017, 0.9979657409349408, 0.9973356673898423, 0.9966942170368208, 0.9957397460006276, 0.9946933450992096, 0.9986130893246276, 0.9986719921633533, 0.998278453175538, 0.9978157339285229, 0.9970984555906001, 0.9961985709458547, 0.9951822427859606, 0.9936961272967941, 0.9985630055740025, 0.9983951137291789, 0.9980280018546291, 0.9972861861064357, 0.9966240781978507, 0.9955485859634001, 0.9941660344442504, 0.9928122653664025, 0.9984438412144063, 0.9984114890434509, 0.9979589532261806, 0.9974792315802822, 0.9965881763290598, 0.9956702016688347, 0.9945807546737081, 0.9932008854767221, 0.9983113553402325, 0.9982211394501753, 0.9979180116143059, 0.9972495148301865, 0.9966016125787381, 0.9955317642220424, 0.9944196457045468, 0.9929743788174106, 0.9982490040871045, 0.9982406113640017, 0.9978305642308072, 0.9973363327533058, 0.9964891945589276, 0.9956037472752988, 0.9943294372782085, 0.993111605678556]
# ours_data = [0.9998557508001293, 0.9998033070462279, 0.9998126916911222, 0.9998138737274365, 0.9998093428083682, 0.9998042590101336, 0.9997922382913851, 0.9997771088505465, 0.9998074822790604, 0.9997467275383065, 0.9997512871669347, 0.9997489617210809, 0.9997382188596537, 0.9997272396685657, 0.9997096074249555, 0.9996872378204591, 0.9997228084236799, 0.9995824203444713, 0.9995724208861232, 0.9995524022236858, 0.9995259579490027, 0.9995035125178832, 0.9994727339390069, 0.9994401094659202, 0.9995521007590522, 0.9992693420921227, 0.9992562900369105, 0.9992324724082347, 0.9991981445133958, 0.9991671102249555, 0.9991215703853931, 0.999072970918862, 0.9992998867707547, 0.9988408980568229, 0.9988206635326391, 0.9987962043067451, 0.9987616307098284, 0.998728063650004, 0.9986797442394661, 0.9986300335191163, 0.9989401227100229, 0.9983042343391446, 0.9982908067680188, 0.9982689906650882, 0.9982291139588623, 0.9981830123064052, 0.9981164310112848, 0.9980491005958793, 0.9985083021292437, 0.9976905761220298, 0.997688823524387, 0.9976700096443503, 0.9976309880555684, 0.9975868330618909, 0.9975235132760456, 0.9974559718593108, 0.9980538182229022, 0.9970869326777736, 0.9970884370884919, 0.9970696933455873, 0.9970272225331254, 0.9969725101490953, 0.996899118704191, 0.9968231136519935]

# # 绘制折线图
# plt.figure(figsize=(12, 10))
# # plt.plot(timestamps, dmd_data, label='DMD', marker='o', markersize=7)
# plt.plot(timestamps, rt, label='RT', marker='o', markersize=7)
# plt.plot(timestamps, rt_gdl, label='RT-GDL', marker='>', markersize=7)
# # plt.plot(timestamps, dm, label='DM', marker='d', markersize=7)
# # plt.plot(timestamps, dm_gdl, label='DM-GDL', marker='p', markersize=7)
# plt.plot(timestamps, rm, label='RM', marker='v', markersize=7)  # 选择了另外一个marker作为示例
# plt.plot(timestamps, rm_gdl, label='RM-GDL', marker='h', markersize=7)  # 选择了另外一个marker作为示例




# 使用bbox_inches='tight'减少空白区域，并通过pad_inches调整边缘空白的大小
# 保存为pdf使用下面的格式
# plt.savefig(f'C:/Users/76585/OneDrive/metting_exp_etl/exp/202311中文期刊投稿/图片/消融实验/是否有损失函数/{file_title}.pdf', bbox_inches='tight', pad_inches=0.1, format='pdf')
# 保存为png使用下面的格式
plt.savefig(f'C:/Users/76585/OneDrive/metting_exp_etl/exp/202311中文期刊投稿/图片/消融实验/是否有损失函数/{file_title}.png', bbox_inches='tight', pad_inches=0.1)

# 显示图表
# plt.show()
