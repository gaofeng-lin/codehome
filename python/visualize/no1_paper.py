import matplotlib.pyplot as plt
import numpy as np

# 假设timestamps是一个包含69个时间步标签的列表
timestamps = np.arange(0, 64)  # 例如，从1到69

title = "SSIM--RM"
file_title = "内插--SSIM--RM"
# 假设这三个列表包含了你的实验数据
# dmd_data = [0.4289794973795614, 0.42800151383718527, 0.4270091504692198, 0.42600861722536154, 0.42498736952083865, 0.42402828439892787, 0.42312203183070557, 0.4222557840166214, 0.42140781080434625, 0.42055647683678593, 0.4197069502128803, 0.41882973299270554, 0.41798590195424123, 0.41716836066350443, 0.4164288891712647, 0.41574588623765985, 0.4151125713497543, 0.4144938736401922, 0.41385694913006077, 0.4132584507783631, 0.41270458715035624, 0.41223713687198255, 0.4118180967562931, 0.41147141486830524, 0.41117765942887635, 0.41095382198049035, 0.41080554982509887, 0.41071918243388333, 0.4107400103677225, 0.41085360245025887, 0.4110953639350801, 0.4113921439214796, 0.41173238792355604, 0.41208185048267304, 0.41243962047070826, 0.4128319102399073, 0.41323030894633367, 0.4136287915110423, 0.4139384699757062, 0.41417998540870066, 0.4143259523698296, 0.4143975026121066, 0.41439563389288897, 0.41433861459919674, 0.41423729950259297, 0.41405653070539133, 0.41381366812625897, 0.41345217492654895, 0.4129816097857732, 0.4123888545906904, 0.4117393088763761, 0.4110364110559775, 0.41024614374952956, 0.409362320492905, 0.4083677459327417, 0.40731223014559426, 0.4061768995448772, 0.40500337203327563, 0.40376072844846217, 0.4024815123884117, 0.4011820912225108, 0.3998589513241101, 0.39849799571554834, 0.39707378860104536, 0.3956537358166351, 0.39422641715759715, 0.3928140502987293, 0.3913868224943103, 0.3899647263856478]
convlstm_data = [0.9986885860934497, 0.9985615865286143, 0.9982921825574377, 0.9978267936180406, 0.9971535384212746, 0.9965300448288835, 0.9954826917466838, 0.9946255601037546, 0.9986946654932344, 0.9986944509950654, 0.9983914420515447, 0.9980386544477469, 0.9974749993478654, 0.9965955056827162, 0.9958103027961651, 0.9947377327711909, 0.9986877072369309, 0.998595599503193, 0.998386777159017, 0.9979657409349408, 0.9973356673898423, 0.9966942170368208, 0.9957397460006276, 0.9946933450992096, 0.9986130893246276, 0.9986719921633533, 0.998278453175538, 0.9978157339285229, 0.9970984555906001, 0.9961985709458547, 0.9951822427859606, 0.9936961272967941, 0.9985630055740025, 0.9983951137291789, 0.9980280018546291, 0.9972861861064357, 0.9966240781978507, 0.9955485859634001, 0.9941660344442504, 0.9928122653664025, 0.9984438412144063, 0.9984114890434509, 0.9979589532261806, 0.9974792315802822, 0.9965881763290598, 0.9956702016688347, 0.9945807546737081, 0.9932008854767221, 0.9983113553402325, 0.9982211394501753, 0.9979180116143059, 0.9972495148301865, 0.9966016125787381, 0.9955317642220424, 0.9944196457045468, 0.9929743788174106, 0.9982490040871045, 0.9982406113640017, 0.9978305642308072, 0.9973363327533058, 0.9964891945589276, 0.9956037472752988, 0.9943294372782085, 0.993111605678556]
ours_data = [0.9998557508001293, 0.9998033070462279, 0.9998126916911222, 0.9998138737274365, 0.9998093428083682, 0.9998042590101336, 0.9997922382913851, 0.9997771088505465, 0.9998074822790604, 0.9997467275383065, 0.9997512871669347, 0.9997489617210809, 0.9997382188596537, 0.9997272396685657, 0.9997096074249555, 0.9996872378204591, 0.9997228084236799, 0.9995824203444713, 0.9995724208861232, 0.9995524022236858, 0.9995259579490027, 0.9995035125178832, 0.9994727339390069, 0.9994401094659202, 0.9995521007590522, 0.9992693420921227, 0.9992562900369105, 0.9992324724082347, 0.9991981445133958, 0.9991671102249555, 0.9991215703853931, 0.999072970918862, 0.9992998867707547, 0.9988408980568229, 0.9988206635326391, 0.9987962043067451, 0.9987616307098284, 0.998728063650004, 0.9986797442394661, 0.9986300335191163, 0.9989401227100229, 0.9983042343391446, 0.9982908067680188, 0.9982689906650882, 0.9982291139588623, 0.9981830123064052, 0.9981164310112848, 0.9980491005958793, 0.9985083021292437, 0.9976905761220298, 0.997688823524387, 0.9976700096443503, 0.9976309880555684, 0.9975868330618909, 0.9975235132760456, 0.9974559718593108, 0.9980538182229022, 0.9970869326777736, 0.9970884370884919, 0.9970696933455873, 0.9970272225331254, 0.9969725101490953, 0.996899118704191, 0.9968231136519935]

# 绘制折线图
plt.figure(figsize=(12, 10))
# plt.plot(timestamps, dmd_data, label='DMD', marker='o', markersize=7)
plt.plot(timestamps, convlstm_data, label='ConvLSTM', marker='s', markersize=7)
plt.plot(timestamps, ours_data, label='Ours', marker='^', markersize=7)

# 添加图例，并设置字体大小
plt.legend(fontsize=23, markerscale=2)

# 添加标题和轴标签
plt.title(title, fontsize=28)
plt.xlabel('TimeStamp', fontsize=28)
plt.ylabel('Value', fontsize=28)


# 设置坐标轴刻度的字体大小
plt.tick_params(axis='both', which='major', labelsize=25)

# 使用bbox_inches='tight'减少空白区域，并通过pad_inches调整边缘空白的大小
# 保存为pdf使用下面的格式
plt.savefig(f'C:/Users/76585/OneDrive/metting_exp_etl/exp/202311中文期刊投稿/图片/{file_title}.pdf', bbox_inches='tight', pad_inches=0.1, format='pdf')
# 保存为png使用下面的格式
plt.savefig(f'C:/Users/76585/OneDrive/metting_exp_etl/exp/202311中文期刊投稿/图片/{file_title}.png', bbox_inches='tight', pad_inches=0.1)

# 显示图表
# plt.show()
